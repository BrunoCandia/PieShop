@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@model PieSearchViewModel

<h2>Search pies</h2>
<hr />

<form asp-controller="Pie" asp-action="Search" method="get">
    <div class="mb-3">
        <label class="form-label">Category</label>
        <select asp-for="SearchCategory" asp-items="Model.Categories" class="form-control">
            <option value="">All</option>
        </select>
    </div>
    <div class="mb-3">
        <label class="form-label">Search value</label>
        <input type="text" asp-for="SearchQuery" class="form-control" />
    </div>
    <input type="submit" value="Filter" class="btn btn-primary" />
</form>

@if (!Model.Pies.Any())
{
    <p>No results</p>
}
else
{
    <table class="table table-condensed table-bordered">
        <tr>            
            <th>Name</th>
            <th>Price</th>
            <th>Actions</th>
        </tr>
        @foreach (var pie in Model.Pies)
        {
            <tr>                
                <td>@pie.Name</td>
                <td>@pie.Price</td>
                <td>
                    @if (User != null && User.Identity != null && User.Identity.IsAuthenticated && (await AuthorizationService.AuthorizeAsync(User, "IsAdministrator")).Succeeded)
                    {
                        <a asp-action="FullDetail" asp-route-pieId="@pie.PieId">Full Detail</a>
                        <a asp-action="Edit" asp-route-pieId="@pie.PieId">Edit</a>
                        <a asp-action="Delete" asp-route-pieId="@pie.PieId">Delete</a>
                    }
                    else
                    {
                        <a asp-action="Detail" asp-route-pieId="@pie.PieId">Detail</a>
                    }
                </td>
            </tr>
        }
    </table>
}

@* Base course *@
@* @{
    ViewData["Title"] = "Search Pies";
    bool searchPerformed = ViewData["SearchPerformed"] != null && (bool)ViewData["SearchPerformed"];
    string searchQuery = ViewData["CurrentFilter"] as string;
} *@

@* <br />
<br />
<br />
<br />
Enter your search query:
<form asp-action="Search" method="get">
    <input type="text" name="searchQuery" value="@searchQuery" placeholder="Type for search" />
    <input type="submit" value="Search" />
</form>
<br />

@if (!string.IsNullOrWhiteSpace(ViewData["ErrorMessage"] as string))
{
    <div class="alert alert-danger">@ViewData["ErrorMessage"]</div>
}

@if (searchPerformed) {
    @if (Model.Pies.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pie in Model.Pies)
                {
                    <tr>
                        <td>@pie.Name</td>
                        <td>@pie.Price</td>
                        <td>
                            <a asp-controller="Pie" asp-action="Detail" asp-route-pieId="@pie.PieId" class="pie-link">Detail</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No pies found.</p>
    }
} *@